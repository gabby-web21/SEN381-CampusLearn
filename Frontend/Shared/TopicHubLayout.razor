@inherits LayoutComponentBase

<!-- ===== Top Bar (same behavior as Shared/Navigation.razor) ===== -->
<nav class="cl-nav">
    <div class="container nav-row">
        <a class="brand" href="/Landing">
            <span class="logo" aria-hidden="true">
                <svg viewBox="0 0 64 64" width="34" height="34" role="img" focusable="false">
                    <g stroke="currentColor" fill="none" stroke-width="6" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M42 14c-4-4-9-6-14-6C15 8 8 15 8 26s7 18 20 18c5 0 10-2 14-6" />
                        <path d="M56 12v32H34" />
                    </g>
                </svg>
            </span>
            <span class="brand-text">CampusLearn</span>
        </a>

        <button class="hamburger @(IsMenuOpen ? "active" : "")"
                aria-label="Menu"
                aria-expanded="@IsMenuOpen.ToString().ToLowerInvariant()"
                type="button"
                @onclick="ToggleMenu">
            <span></span><span></span><span></span>
        </button>
    </div>
</nav>

<!-- Backdrop (click to close) -->
<button class="backdrop"
        type="button"
        data-open="@IsMenuOpen.ToString().ToLowerInvariant()"
        @onclick="ToggleMenu"></button>

<!-- Slide-out Drawer (mobile nav for TopicHub) -->
<aside class="drawer" data-open="@IsMenuOpen.ToString().ToLowerInvariant()">
    <nav class="drawer-nav">
        <a @onclick='() => NavigateTo("/dashboard")'>Dashboard</a>
        <a @onclick='() => NavigateTo("/studentprofile")'>My Profile</a>
        <a @onclick='() => NavigateTo("/subjects")'>Subjects</a>
        <a @onclick='() => NavigateTo("/peers")'>Peers</a>
    </nav>
</aside>

<!-- ===== Page Body ===== -->
<main class="hub">
    <div class="container grid">
        <!-- Desktop sidebar (hidden on mobile; drawer replaces it) -->
        <aside class="menu-card">
            <div class="menu-head">
                <div class="code">BUM 281</div>
                <div class="sub">TOPIC CHOICE</div>
            </div>

            <nav class="menu-links">
                <a href="/topichub/tutors">Tutors</a>
                <a href="/topichub/forum">Discussion Forum</a>
                <a href="/topichub/learningresources">Learning Resources</a>
                <a href="/topichub/claratea">AI Chatbot</a>
                <a href="/topichub/tutorprofile">Tutor Profile</a>
            </nav>

            <div class="menu-foot">
                <span class="chev">^</span>
            </div>
        </aside>

        <section class="content-host">
            <div class="content-inner">
                @Body
            </div>
        </section>
    </div>
</main>

<style>
    :root {
        --bg: #FFFFFF;
        --nav: #DBE4EE;
        --ink: #2D3034;
        --panel: #DBE4EE;
        --ring: color-mix(in oklab, var(--ink) 12%, white);
        --radius: 1.25rem;
        --container: min(1200px, 92vw);
        --shadow-1: 0 8px 22px rgba(0,0,0,.06);
        --shadow-2: 0 12px 28px rgba(0,0,0,.08);
    }

    *, *::before, *::after {
        box-sizing: border-box
    }

    html, body {
        height: 100%
    }

    body {
        margin: 0;
        background: var(--bg);
        color: var(--ink);
        font-family: system-ui, -apple-system, "Segoe UI", Roboto, Inter, Arial, sans-serif;
    }

    .container {
        width: var(--container);
        margin-inline: auto;
        padding-inline: clamp(12px,3vw,24px)
    }

    /* ===== Top bar (mirrors Shared/Navigation.razor) ===== */
    .cl-nav {
        position: sticky;
        top: 0;
        z-index: 50;
        background: var(--nav);
        border-bottom: 1px solid var(--ring)
    }

    .nav-row {
        height: 64px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 16px
    }

    .brand {
        display: flex;
        align-items: center;
        gap: 10px;
        text-decoration: none;
        color: var(--ink)
    }

    .brand-text {
        font-weight: 800;
        font-size: clamp(18px,2.1vw,24px)
    }

    .logo {
        color: var(--ink)
    }

    /* Hamburger (same animation & API) */
    .hamburger {
        background: none;
        border: 0;
        cursor: pointer;
        width: 40px;
        height: 34px;
        display: grid;
        place-items: center
    }

        .hamburger span {
            display: block;
            width: 26px;
            height: 3px;
            background: var(--ink);
            border-radius: 8px;
            transition: transform .25s ease, opacity .25s ease
        }

            .hamburger span + span {
                margin-top: 5px
            }

        .hamburger.active span:nth-child(1) {
            transform: translateY(8px) rotate(45deg)
        }

        .hamburger.active span:nth-child(2) {
            opacity: 0
        }

        .hamburger.active span:nth-child(3) {
            transform: translateY(-8px) rotate(-45deg)
        }

    /* Backdrop (same attributes/data-open approach) */
    .backdrop {
        position: fixed;
        inset: 0;
        background: rgba(0,0,0,.25);
        border: 0;
        padding: 0;
        margin: 0;
        opacity: 0;
        pointer-events: none;
        transition: opacity .24s ease;
        z-index: 59;
    }

        .backdrop[data-open="true"] {
            opacity: 1;
            pointer-events: auto
        }

    /* Drawer (same attributes/data-open approach) */
    .drawer {
        position: fixed;
        inset: 0 0 0 auto;
        width: min(78vw,360px);
        translate: 100% 0;
        transition: translate .24s ease;
        background: #fff;
        border-left: 1px solid var(--ring);
        box-shadow: var(--shadow-2);
        z-index: 60;
        padding: 20px;
    }

        .drawer[data-open="true"] {
            translate: 0 0
        }

    .drawer-nav {
        display: grid;
        gap: 10px;
        margin-top: 6px
    }

        .drawer-nav a {
            display: block;
            padding: 12px;
            border-radius: 12px;
            font-weight: 800;
            text-decoration: none;
            color: var(--ink)
        }

            .drawer-nav a:hover {
                background: color-mix(in oklab, var(--ink) 6%, white)
            }

    /* ===== TopicHub layout ===== */
    .hub {
        padding-block: clamp(14px, 3.4vw, 22px)
    }

    .grid {
        display: grid;
        grid-template-columns: 280px 1fr; /* sidebar + content */
        gap: clamp(14px, 3vw, 22px);
    }

    .menu-card {
        background: var(--panel);
        border: 1px solid var(--ring);
        border-radius: var(--radius);
        box-shadow: var(--shadow-1);
        padding: 18px 16px 8px;
        display: flex;
        flex-direction: column;
        min-height: 360px;
    }

    .menu-head .code {
        font-weight: 900;
        font-size: 28px;
        line-height: 1;
    }

    .menu-head .sub {
        margin-top: 6px;
        font-size: 12px;
        letter-spacing: .8px;
        font-weight: 800;
    }

    .menu-links {
        margin-top: 16px;
        display: grid;
        gap: 14px;
    }

        .menu-links a {
            text-decoration: none;
            color: var(--ink);
            font-weight: 600;
            padding: 6px 6px;
            border-radius: 10px;
        }

            .menu-links a:hover {
                background: color-mix(in oklab, var(--ink) 6%, white);
            }

    .menu-foot {
        margin-top: auto;
        display: flex;
        justify-content: center;
        padding-top: 10px;
    }

    .chev {
        font-weight: 800
    }

    .content-host {
        border-radius: var(--radius)
    }

    /* ===== Responsive ===== */
    @@media (max-width: 900px) {
        .brand-text {
            display: none
        }

        .grid {
            grid-template-columns: 1fr;
        }

        .menu-card {
            display: none;
        }
        /* use drawer on mobile */
    }
</style>

@code {
    [Inject] private NavigationManager Nav { get; set; } = default!;

    private bool IsMenuOpen;

    private void ToggleMenu() => IsMenuOpen = !IsMenuOpen;

    private void NavigateTo(string path)
    {
        IsMenuOpen = false;   // close the drawer before navigating
        Nav.NavigateTo(path);
    }
}
