@page "/resources/{LecturerName}"
@layout DashboardLayout
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms

<div class="resources-wrapper">
    <div class="resources-container">
        <h1 class="page-title">
            Resources for <span>@LecturerName</span>
        </h1>

        @if (CurrentLecturer == null)
        {
            <p class="empty-message">No lecturer found with this name.</p>
        }
        else
        {
            <div class="resource-card">
                <h2 class="lecturer-name">@CurrentLecturer.Name</h2>

                @if (CurrentLecturer.AllResources.Any())
                {
                    <ul class="resource-list">
                        @foreach (var file in CurrentLecturer.AllResources)
                        {
                            <li class="resource-item">
                                <span>@file</span>
                                <button class="btn-download" @onclick="() => DownloadResource(file)">
                                    ⬇ Download
                                </button>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="empty-message">No resources uploaded yet.</p>
                }

                <!-- Upload -->
                <div class="upload-section">
                    <label class="upload-label">Upload New Resource</label>
                    <InputFile OnChange="HandleFileUpload" class="upload-input" />
                    <button class="btn-upload" @onclick="UploadNewResource">
                        + Upload Resource
                    </button>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public string LecturerName { get; set; } = "";

    private Lecturer? CurrentLecturer;

    protected override void OnInitialized()
    {
        // Mock data
        var lecturers = new List<Lecturer>
        {
            new Lecturer
            {
                Name = "Dr. Smith",
                AllResources = new List<string> { "Databases.pdf", "Queries.docx" }
            },
            new Lecturer
            {
                Name = "Prof. Johnson",
                AllResources = new List<string> { "ML_Notes.pdf", "NN_Slides.pptx" }
            }
        };

        CurrentLecturer = lecturers.FirstOrDefault(l => l.Name == LecturerName);
    }

    private void HandleFileUpload(InputFileChangeEventArgs e)
    {
        // TODO: Save uploaded file
    }

    private void UploadNewResource()
    {
        // TODO: Upload to CurrentLecturer
    }

    private void DownloadResource(string file)
    {
        // TODO: Download logic
    }

    public class Lecturer
    {
        public string Name { get; set; } = "";
        public List<string> AllResources { get; set; } = new();
    }
}

<style>
    /* Wrapper */
    .resources-wrapper {
        min-height: 100vh;
        background: linear-gradient(135deg, #eef2ff, #fef3c7);
        padding: 3rem 1.5rem;
        display: flex;
        justify-content: center;
    }

    .resources-container {
        width: 100%;
        max-width: 900px;
    }

    /* Title */
    .page-title {
        font-size: 2.5rem;
        font-weight: 800;
        color: #1e293b;
        margin-bottom: 2rem;
    }

        .page-title span {
            color: #2563eb;
            text-shadow: 0 0 6px rgba(37,99,235,0.25);
        }

    /* Card */
    .resource-card {
        background: #fff;
        border-radius: 1.5rem;
        padding: 2rem;
        box-shadow: 0 8px 20px rgba(0,0,0,0.08);
    }

    .lecturer-name {
        font-size: 1.75rem;
        font-weight: 700;
        color: #334155;
        margin-bottom: 1.5rem;
    }

    /* Resource list */
    .resource-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .resource-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 1.25rem;
        margin-bottom: 0.75rem;
        border-radius: 0.75rem;
        background: #f9fafb;
        font-weight: 500;
        color: #374151;
        transition: all 0.2s;
    }

        .resource-item:hover {
            background: #eef2ff;
            transform: translateX(3px);
        }

    /* Empty message */
    .empty-message {
        font-style: italic;
        color: #6b7280;
        margin-bottom: 1.5rem;
    }

    /* Upload section */
    .upload-section {
        margin-top: 2rem;
        border-top: 1px solid #e5e7eb;
        padding-top: 1.5rem;
    }

    .upload-label {
        display: block;
        font-size: 0.95rem;
        font-weight: 600;
        color: #475569;
        margin-bottom: 0.75rem;
    }

    .upload-input {
        display: block;
        width: 100%;
        padding: 0.75rem;
        border-radius: 0.75rem;
        border: 1px solid #d1d5db;
        margin-bottom: 1rem;
    }

    /* Buttons */
    .btn-upload {
        background: linear-gradient(45deg, #2563eb, #3b82f6);
        color: #fff;
        padding: 10px 18px;
        border-radius: 12px;
        border: none;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.2s ease;
    }

        .btn-upload:hover {
            background: linear-gradient(45deg, #1d4ed8, #2563eb);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(37,99,235,0.25);
        }

    .btn-download {
        background: #10b981;
        color: #fff;
        padding: 8px 14px;
        border-radius: 10px;
        border: none;
        cursor: pointer;
        font-weight: 600;
        transition: all 0.2s ease;
    }

        .btn-download:hover {
            background: #059669;
            transform: scale(1.05);
        }
</style>
